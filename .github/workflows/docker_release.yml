name: Release

on:
  push:
    branches:
      - "master"
    tags:
      - "v*"
  pull_request:
    branches:
      - "master"
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Get Version
        id: version
        run: |
          echo "::set-output name=VERSION::$(poetry version -s)"
          echo "::set-output name=TAG::${GITHUB_REF#refs/tags/v}"

      - name: Check Version
        if: ${{ steps.version.outputs.VERSION != steps.version.outputs.TAG }}
        run: exit 1

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: check-version
    if: |-
      ${{
        always() &&
        (needs.check-version.result == 'success' || needs.check-version.result == 'skipped')
      }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Tags
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and Publish
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          short-description: ${{ github.event.repository.description }}
